generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Masters
model Master {
  id          Int      @id @default(autoincrement())
  cities      String[]
  name        String
  login       String?  @unique
  password    String?
  passportDoc String?  @map("passport_doc")
  contractDoc String?  @map("contract_doc")
  statusWork  String   @map("status_work")
  dateCreate  DateTime @default(now()) @map("date_create")
  note        String?
  tgId        String?  @map("tg_id")
  chatId      String?  @map("chat_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  orders Order[]
  
  @@index([statusWork])
  @@index([name])
  @@index([dateCreate])
  @@map("master")
}

// Directors
model Director {
  id           Int      @id @default(autoincrement())
  cities       String[]
  name         String
  login        String   @unique
  password     String
  contractDoc  String?  @map("contract_doc")
  passportDoc  String?  @map("passport_doc")
  dateCreate   DateTime @default(now()) @map("date_create")
  note         String?
  tgId         String?  @map("tg_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  orders       Order[]
  cashApprovals Cash[]  @relation("CashApprover")
  
  @@index([name])
  @@index([dateCreate])
  @@map("director")
}

// Call Centre Admins
model CallcentreAdmin {
  id        Int      @id @default(autoincrement())
  login     String   @unique
  password  String
  note      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  orders    Order[]  @relation("CallcentreAdminOrders")
  
  @@map("callcentre_admin")
}

// Call Centre Operators
model CallcentreOperator {
  id             Int       @id @default(autoincrement())
  name           String
  login          String    @unique
  password       String
  city           String
  status         String
  statusWork     String    @map("status_work")
  passport       String?
  contract       String?
  dateCreate     DateTime  @map("date_create")
  note           String?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  sipAddress     String?   @map("sip_address")
  
  orders         Order[]   @relation("CallcentreOperatorOrders")
  
  @@index([statusWork])
  @@index([name])
  @@index([dateCreate])
  @@map("callcentre_operator")
}

// Order model (for relations only)
model Order {
  id                    Int       @id @default(autoincrement())
  rk                    String
  city                  String
  avitoName             String?
  phone                 String
  typeOrder             String
  clientName            String
  address               String
  dateMeeting           String
  typeEquipment         String
  problem               String
  callRecord            String?
  statusOrder           String
  masterId              Int?
  result                Int?
  expenditure           Int?
  clean                 Int?
  masterChange          Int?
  bsoDoc                String?
  expenditureDoc        String?
  operatorNameId        Int
  createDate            DateTime  @default(now())
  closingData           String?
  avitoChatId           String?
  callId                String?
  prepayment            Int?
  dateClosmod           String?
  comment               String?
  cashSubmissionStatus  String?
  cashSubmissionDate    DateTime?
  cashSubmissionAmount  Int?
  cashReceiptDoc        String?
  cashApprovedBy        Int?
  cashApprovedDate      DateTime?
  directorId            Int?
  callcentreAdminId     Int?
  callcentreOperatorId  Int?
  
  master                Master?              @relation(fields: [masterId], references: [id])
  director              Director?            @relation(fields: [directorId], references: [id])
  callcentreAdmin       CallcentreAdmin?     @relation("CallcentreAdminOrders", fields: [callcentreAdminId], references: [id])
  callcentreOperator    CallcentreOperator?  @relation("CallcentreOperatorOrders", fields: [callcentreOperatorId], references: [id])
  avito                 Avito?               @relation(fields: [avitoChatId], references: [chatId])
  call                  Call?                @relation(fields: [callId], references: [callId])
  cash                  Cash?
  
  @@map("order")
}

// Related models (minimal definitions for relations)
model Avito {
  id              Int      @id @default(autoincrement())
  chatId          String   @unique
  city            String?
  name            String?
  phone           String?
  createdAt       DateTime @default(now())
  
  orders          Order[]
  
  @@map("avito")
}

model Call {
  id              Int      @id @default(autoincrement())
  callId          String   @unique @map("call_id")
  phoneClient     String   @map("phone_client")
  dateCreate      DateTime @map("date_create")
  duration        Int?
  recordUrl       String?  @map("record_url")
  
  orders          Order[]
  
  @@map("calls")
}

model Cash {
  id                Int       @id @default(autoincrement())
  orderId           Int       @unique
  amount            Int
  type              String
  status            String
  approvedBy        Int?
  approvedDate      DateTime?
  createdAt         DateTime  @default(now())
  
  order             Order     @relation(fields: [orderId], references: [id])
  approver          Director? @relation("CashApprover", fields: [approvedBy], references: [id])
  
  @@map("cash")
}


